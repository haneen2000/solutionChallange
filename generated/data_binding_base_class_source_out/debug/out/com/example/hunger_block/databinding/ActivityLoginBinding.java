// Generated by view binder compiler. Do not edit!
package com.example.hunger_block.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.hunger_block.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button company;

  @NonNull
  public final EditText email;

  @NonNull
  public final EditText frist;

  @NonNull
  public final EditText last;

  @NonNull
  public final EditText password;

  @NonNull
  public final EditText passwordCon;

  @NonNull
  public final Button person;

  private ActivityLoginBinding(@NonNull LinearLayout rootView, @NonNull Button company,
      @NonNull EditText email, @NonNull EditText frist, @NonNull EditText last,
      @NonNull EditText password, @NonNull EditText passwordCon, @NonNull Button person) {
    this.rootView = rootView;
    this.company = company;
    this.email = email;
    this.frist = frist;
    this.last = last;
    this.password = password;
    this.passwordCon = passwordCon;
    this.person = person;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.company;
      Button company = rootView.findViewById(id);
      if (company == null) {
        break missingId;
      }

      id = R.id.email;
      EditText email = rootView.findViewById(id);
      if (email == null) {
        break missingId;
      }

      id = R.id.frist;
      EditText frist = rootView.findViewById(id);
      if (frist == null) {
        break missingId;
      }

      id = R.id.last;
      EditText last = rootView.findViewById(id);
      if (last == null) {
        break missingId;
      }

      id = R.id.password;
      EditText password = rootView.findViewById(id);
      if (password == null) {
        break missingId;
      }

      id = R.id.passwordCon;
      EditText passwordCon = rootView.findViewById(id);
      if (passwordCon == null) {
        break missingId;
      }

      id = R.id.person;
      Button person = rootView.findViewById(id);
      if (person == null) {
        break missingId;
      }

      return new ActivityLoginBinding((LinearLayout) rootView, company, email, frist, last,
          password, passwordCon, person);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
