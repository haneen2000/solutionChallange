// Generated by view binder compiler. Do not edit!
package com.example.hunger_block.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.hunger_block.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCoinBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText cardnumber;

  @NonNull
  public final EditText cardtype;

  @NonNull
  public final EditText cvv;

  @NonNull
  public final Button done;

  @NonNull
  public final EditText expirydate;

  @NonNull
  public final EditText nameoncard;

  private ActivityCoinBinding(@NonNull LinearLayout rootView, @NonNull EditText cardnumber,
      @NonNull EditText cardtype, @NonNull EditText cvv, @NonNull Button done,
      @NonNull EditText expirydate, @NonNull EditText nameoncard) {
    this.rootView = rootView;
    this.cardnumber = cardnumber;
    this.cardtype = cardtype;
    this.cvv = cvv;
    this.done = done;
    this.expirydate = expirydate;
    this.nameoncard = nameoncard;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCoinBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCoinBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_coin, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCoinBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardnumber;
      EditText cardnumber = rootView.findViewById(id);
      if (cardnumber == null) {
        break missingId;
      }

      id = R.id.cardtype;
      EditText cardtype = rootView.findViewById(id);
      if (cardtype == null) {
        break missingId;
      }

      id = R.id.cvv;
      EditText cvv = rootView.findViewById(id);
      if (cvv == null) {
        break missingId;
      }

      id = R.id.done;
      Button done = rootView.findViewById(id);
      if (done == null) {
        break missingId;
      }

      id = R.id.expirydate;
      EditText expirydate = rootView.findViewById(id);
      if (expirydate == null) {
        break missingId;
      }

      id = R.id.nameoncard;
      EditText nameoncard = rootView.findViewById(id);
      if (nameoncard == null) {
        break missingId;
      }

      return new ActivityCoinBinding((LinearLayout) rootView, cardnumber, cardtype, cvv, done,
          expirydate, nameoncard);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
