// Generated by view binder compiler. Do not edit!
package com.example.hunger_block.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.hunger_block.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPersonBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button SignOut;

  @NonNull
  public final Button coin;

  @NonNull
  public final Button diliver;

  @NonNull
  public final ImageView imageView2;

  @NonNull
  public final ImageView imageView3;

  @NonNull
  public final ImageView imageView4;

  @NonNull
  public final ImageView imageView5;

  @NonNull
  public final Button pickUp;

  @NonNull
  public final Button spots;

  private ActivityPersonBinding(@NonNull ConstraintLayout rootView, @NonNull Button SignOut,
      @NonNull Button coin, @NonNull Button diliver, @NonNull ImageView imageView2,
      @NonNull ImageView imageView3, @NonNull ImageView imageView4, @NonNull ImageView imageView5,
      @NonNull Button pickUp, @NonNull Button spots) {
    this.rootView = rootView;
    this.SignOut = SignOut;
    this.coin = coin;
    this.diliver = diliver;
    this.imageView2 = imageView2;
    this.imageView3 = imageView3;
    this.imageView4 = imageView4;
    this.imageView5 = imageView5;
    this.pickUp = pickUp;
    this.spots = spots;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPersonBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPersonBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_person, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPersonBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.SignOut;
      Button SignOut = rootView.findViewById(id);
      if (SignOut == null) {
        break missingId;
      }

      id = R.id.coin;
      Button coin = rootView.findViewById(id);
      if (coin == null) {
        break missingId;
      }

      id = R.id.diliver;
      Button diliver = rootView.findViewById(id);
      if (diliver == null) {
        break missingId;
      }

      id = R.id.imageView2;
      ImageView imageView2 = rootView.findViewById(id);
      if (imageView2 == null) {
        break missingId;
      }

      id = R.id.imageView3;
      ImageView imageView3 = rootView.findViewById(id);
      if (imageView3 == null) {
        break missingId;
      }

      id = R.id.imageView4;
      ImageView imageView4 = rootView.findViewById(id);
      if (imageView4 == null) {
        break missingId;
      }

      id = R.id.imageView5;
      ImageView imageView5 = rootView.findViewById(id);
      if (imageView5 == null) {
        break missingId;
      }

      id = R.id.pickUp;
      Button pickUp = rootView.findViewById(id);
      if (pickUp == null) {
        break missingId;
      }

      id = R.id.spots;
      Button spots = rootView.findViewById(id);
      if (spots == null) {
        break missingId;
      }

      return new ActivityPersonBinding((ConstraintLayout) rootView, SignOut, coin, diliver,
          imageView2, imageView3, imageView4, imageView5, pickUp, spots);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
